<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChatHistory">
    <chats>
      <list>
        <chat>
          <accountId value="VXNlcjozMDczNzA=" />
          <internalId value="1c7833b1-6ce3-4ac6-bd60-6880d6f27082" />
          <llm>
            <llm>
              <model value="anthropic/claude-2.0" />
              <provider value="Anthropic" />
              <title value="Claude 2.0" />
            </llm>
          </llm>
          <messages>
            <list>
              <message>
                <speaker value="HUMAN" />
                <text value="I need to make a java program that accomplishes the following:&#10;&#10;1.&#9;Student Grade Tracker&#10;a.&#9;Add Student Grades: The teacher can input the grades of individual students.&#10;b.&#9;Display Student Grades&#10;c.&#9;Calculate Statistics: The program can calculate statistics such as average grade, highest grade, lowest grade, etc.&#10;d.&#9;Generate Reports: Generate reports based on the calculated statistics.&#10;e.&#9;Save/Load Data: Option to save student data to a file and load data from a file.&#10;f.&#9;Menu system done with the console&#10;" />
              </message>
              <message>
                <speaker value="ASSISTANT" />
                <text value="Here is a Java program that implements a student grade tracker with the specified requirements:&#10;&#10;```java&#10;import java.util.Scanner;&#10;import java.util.ArrayList;&#10;import java.io.*;&#10;&#10;public class StudentGradeTracker {&#10;&#10;  private static ArrayList&lt;Double&gt; grades = new ArrayList&lt;&gt;();&#10;  &#10;  public static void main(String[] args) {&#10;    Scanner sc = new Scanner(System.in);&#10;    int choice = 0;&#10;    &#10;    while (choice != 6) {&#10;      System.out.println(&quot;\nStudent Grade Tracker&quot;);&#10;      System.out.println(&quot;1. Add Student Grade&quot;);&#10;      System.out.println(&quot;2. Display Grades&quot;);&#10;      System.out.println(&quot;3. Calculate Statistics&quot;); &#10;      System.out.println(&quot;4. Generate Report&quot;);&#10;      System.out.println(&quot;5. Save/Load Data&quot;);&#10;      System.out.println(&quot;6. Exit&quot;);&#10;      System.out.print(&quot;\nEnter your choice: &quot;);&#10;      &#10;      choice = sc.nextInt();&#10;      &#10;      switch(choice) {&#10;        case 1:&#10;          addGrade();&#10;          break;&#10;        case 2:&#10;          displayGrades();&#10;          break;&#10;        case 3:&#10;          calculateStats();&#10;          break;&#10;        case 4:&#10;          generateReport();&#10;          break;&#10;        case 5:&#10;          saveOrLoadData();&#10;          break;&#10;        case 6:&#10;          System.out.println(&quot;Exiting...&quot;);&#10;          break;&#10;        default:&#10;          System.out.println(&quot;Invalid choice&quot;);&#10;      }&#10;    }&#10;    &#10;    sc.close();&#10;  }&#10;  &#10;  private static void addGrade() {&#10;    Scanner sc = new Scanner(System.in);&#10;    System.out.print(&quot;Enter student grade: &quot;);&#10;    double grade = sc.nextDouble();&#10;    grades.add(grade);&#10;    System.out.println(&quot;Grade added!&quot;);&#10;  }&#10;  &#10;  private static void displayGrades() {&#10;    System.out.println(&quot;Student Grades:&quot;);&#10;    for(double grade : grades) {&#10;      System.out.println(grade);&#10;    }&#10;  }&#10;  &#10;  private static void calculateStats() {&#10;    double sum = 0.0;&#10;    double max = grades.get(0);&#10;    double min = grades.get(0);&#10;    &#10;    for(double grade : grades) {&#10;      sum += grade;&#10;      if(grade &gt; max) {&#10;        max = grade;  &#10;      }&#10;      if(grade &lt; min) {&#10;        min = grade;&#10;      }&#10;    }&#10;    &#10;    double avg = sum / grades.size();&#10;    &#10;    System.out.println(&quot;Average: &quot; + avg);&#10;    System.out.println(&quot;Highest: &quot; + max); &#10;    System.out.println(&quot;Lowest: &quot; + min);&#10;  }&#10;  &#10;  private static void generateReport() {&#10;    calculateStats();&#10;    System.out.println(&quot;\nGrade Report:&quot;);&#10;    System.out.println(&quot;Average: &quot; + (sum / grades.size()));&#10;    System.out.println(&quot;Highest: &quot; + max);&#10;    System.out.println(&quot;Lowest: &quot; + min); &#10;  }&#10;  &#10;  private static void saveOrLoadData() {&#10;    Scanner sc = new Scanner(System.in);&#10;    System.out.println(&quot;1. Save Data&quot;);&#10;    System.out.println(&quot;2. Load Data&quot;);&#10;    System.out.print(&quot;Enter your choice: &quot;);&#10;    &#10;    int choice = sc.nextInt();&#10;    &#10;    if(choice == 1) {&#10;      saveData();&#10;    }&#10;    else if(choice == 2) {&#10;      loadData();&#10;    }&#10;    else {&#10;      System.out.println(&quot;Invalid choice&quot;);&#10;    }&#10;  }&#10;&#10;  private static void saveData() {&#10;    try {&#10;      FileOutputStream fos = new FileOutputStream(&quot;grades.dat&quot;);&#10;      ObjectOutputStream oos = new ObjectOutputStream(fos);&#10;      oos.writeObject(grades);&#10;      oos.close();&#10;      fos.close();&#10;      System.out.println(&quot;Data saved to grades.dat&quot;);&#10;    } catch (IOException e) {&#10;      e.printStackTrace();&#10;    }&#10;  }&#10;  &#10;  private static void loadData() {&#10;    try {&#10;      FileInputStream fis = new FileInputStream(&quot;grades.dat&quot;);&#10;      ObjectInputStream ois = new ObjectInputStream(fis);&#10;      grades = (ArrayList)ois.readObject();&#10;      ois.close();&#10;      fis.close();&#10;      System.out.println(&quot;Data loaded from grades.dat&quot;);&#10;    } catch (IOException | ClassNotFoundException e) {&#10;      e.printStackTrace(); &#10;    }&#10;  }&#10;}&#10;```&#10;&#10;This implements all the required functionality like adding grades, calculating statistics, generating reports, and saving/loading data from a file. The menu is implemented using a while loop and switch case. Let me know if you have any other questions!" />
              </message>
            </list>
          </messages>
          <updatedAt value="2024-04-19T21:47:42.54873" />
        </chat>
        <chat>
          <accountId value="VXNlcjozMDczNzA=" />
          <internalId value="da78cce8-21f3-4cb2-be22-e74c78567b6d" />
          <llm>
            <llm>
              <model value="anthropic/claude-2.0" />
              <provider value="Anthropic" />
              <title value="Claude 2.0" />
            </llm>
          </llm>
        </chat>
      </list>
    </chats>
  </component>
</project>